/* --------- mixins --------- */

@mixin inlineblock ($valine: top) {
	display: inline-block;
	vertical-align: $valine;
}

@mixin clearfix {
	&:before,
	&:after {
		content: "";
		display: table;
	}

	&:after {
		clear: both;
	}
}

@mixin border-radius($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;

	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}

@mixin box-shadow($string...) {
	-webkit-box-shadow: $string;
	-moz-box-shadow: $string;
	box-shadow: $string;
}

@mixin transition($transition...) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

@mixin placecolor($color: #000000) {
	&::-webkit-input-placeholder {
		color: $color;
	}
	&:-moz-placeholder {
		color: $color;
	}
	&::-moz-placeholder {
		color: $color;
	}
	&:-ms-input-placeholder {
		color: $color;
	}
}

@mixin vertical-gradient($top-color: #ffffff, $bottom-color: #000000) {
	background-color: $top-color;
	background-image: -webkit-gradient(linear, left top, left bottom, from($top-color), to($bottom-color)); /* Chrome, Safari 4+ */
	background-image: -webkit-linear-gradient(top, $top-color, $bottom-color); /* Chrome 10-25, iOS 5+, Safari 5.1+ */
	background-image: -moz-linear-gradient(top, $top-color, $bottom-color); /* Firefox 3.6-15 */
	background-image: -o-linear-gradient(top, $top-color, $bottom-color); /* Opera 11.10-12.00 */
	background-image: linear-gradient(to bottom, $top-color, $bottom-color); /* Chrome 26, Firefox 16+, IE 10+, Opera 12.10+ */
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr=$top-color, EndColorStr=$bottom-color);
}

@mixin transform($transforms...) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

/* --------- centered --------- */

@mixin absolute-center {
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	margin: auto;
	position: absolute;
}


/*  При использовании плагина gulp.spritesmith
    Эти миксины взяты из стандартного файла, который генерирует этот плагин,
    но добавлена переменная с префиксом, для имени класса иконки (напр. socials-icon__{имя_иконки}).
    Имена переменных соответствуют именам файлов в папке с иконками.
    Создано два миксина - для генерации иконок с ховерами и без них.
    Пример вставки  -
    без ховера - миксин get-sprites. Передаем просто массив
    $socials: ($vk, $fb, $tw);
    @include get-sprites($sprites, 'socials__link_');

    с ховером - миксин get-sprites-hover. Передаем ассоциативный массив
    $socials: ($vk: $vk-hover, $fb: $fb-hover, $tw: $tw-hover);
    @include get-sprites-hover($socials, 'socials__link_');
*/
@mixin get-sprites($sprites, $prefix) {
  @each $sprite, $sprite-hover in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$prefix}#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}

@mixin get-sprites-hover($sprites, $prefix) {
  @each $sprite, $sprite-hover in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$prefix}#{$sprite-name} {
      @include sprite($sprite);

      &:hover{
        @include sprite($sprite-hover);
      }
    }
  }
}

/*---------- Media queris -----------*/

@mixin media($width) {
	@media (max-width: $width) {
		@content;
	}
}


